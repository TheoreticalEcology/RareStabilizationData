pattern=read.csv("./AllPattern.csv",header=T)
pattern$Pcat[which(pattern$p.val<0.1)]="Y"
pattern$Pcat[which(pattern$p.val>0.1)]="N"
pattern$Srat=pattern$Persistent.S/pattern$Observed.S
pattern$Pdiff=pattern$Pattern-pattern$Null.Pattern
sig.list=pattern$Site[which(pattern$Pcat=="Y")]
nonsig.list=pattern$Site[which(pattern$Pcat=="N")]
birds <- subset(results, Group == "Birds")
fish <- subset(results, Group == "Fish")
herps <- subset(results, Group == "Herps")
inverts <- subset(results, Group == "Invertebrates")
mammals <- subset(results, Group == "Mammals")
plants <- subset(results, Group == "Plants")
percents=data.frame(Group=c("Birds","Fish","Herps","Invertebrates","Mammals","Plants"),per=c("0.5","0.5","0.09","0.44","0.53","0.53"))
rand_results=read.csv("background.csv",header=T)
ggplot(results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="red", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000')) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000')) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="red", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.00001,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="red", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.01,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="red", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="red", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="grey", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="darkgrey", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="darkgrey", size=1.5,level=0.99,alpha=1) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=1) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=1) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=1) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.9) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.9) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,type=2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="black") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=1,linetype = 2) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position=c(0.6,100000), legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position=c(0.6,10000), legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.justification=c(1,1), legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.justification=c(0,0), legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.justification=c(0,0), legend.position=c(1,1),legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.justification=c(1,1), legend.position=c(1,1),legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.justification=c(1,1), legend.position=c(1,1),legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
library('ggplot2')
update()
library('ggplot2')
install.packages("ggplot2")
library('ggplot2')
results=read.csv("./AllResults.csv",header=T)
results$Pcat[which(is.na(results$intercept))]=NA
pattern=read.csv("./AllPattern.csv",header=T)
pattern$Pcat[which(pattern$p.val<0.1)]="Y"
pattern$Pcat[which(pattern$p.val>0.1)]="N"
pattern$Srat=pattern$Persistent.S/pattern$Observed.S
pattern$Pdiff=pattern$Pattern-pattern$Null.Pattern
sig.list=pattern$Site[which(pattern$Pcat=="Y")]
nonsig.list=pattern$Site[which(pattern$Pcat=="N")]
birds <- subset(results, Group == "Birds")
fish <- subset(results, Group == "Fish")
herps <- subset(results, Group == "Herps")
inverts <- subset(results, Group == "Invertebrates")
mammals <- subset(results, Group == "Mammals")
plants <- subset(results, Group == "Plants")
percents=data.frame(Group=c("Birds","Fish","Herps","Invertebrates","Mammals","Plants"),per=c("0.5","0.5","0.09","0.44","0.53","0.53"))
rand_results=read.csv("background.csv",header=T)
ggplot(results) +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
geom_point(data=results,aes(intercept,-slope,colour=Group),size=2.5) + scale_colour_brewer(palette="Set1")  +
stat_smooth(data=results,aes(intercept,-slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.justification=c(1,1), legend.position=c(1,1),legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
ggplot(rand_results) + geom_point(data=rand_results,aes(Intercept,-Slope),colour="darkgrey") +
stat_smooth(data=rand_results,aes(Intercept,-Slope),method="lm", fill="black", colour="black", size=1.5,level=0.99,alpha=0.8,linetype = 2) +
scale_y_log10('Strength of NFD',breaks=c(0,1,10,100,1000,10000),labels=c('0','1','10','100','1000','10000'),limits=c(0.1,100000)) +
scale_x_log10('Equilibrium frequency',breaks=c(0,0.0001,0.001,0.01,0.1,1),labels=c('0','0.0001','0.001','0.01','0.1','1'),limits=c(0.00001,1.1)) +
theme_bw() +
theme(panel.grid.minor=element_blank(), panel.grid.major=element_blank(),
legend.text = element_text(size = 16),legend.key = element_rect(colour = NA),
legend.position="right", legend.title = element_text(size=16),
axis.title.y  = element_text(angle=90,size=16),
axis.title.x  = element_text(vjust=-.25,hjust=.55,size=16),
axis.text.y  = element_text(size=16),
axis.text.x  = element_text(size=16))
?lm
results=read.csv("./AllResults.csv",header=T)
rand_results=read.csv("background.csv",header=T)
fullm=lm(log(-Slope)~log(Intercept),data=results)
fullm=lm(log(-slope)~log(Intercept),data=results)
fullm=lm(log(-slope)~log(intercept),data=results)
summary(fullm)
View(results)
nullm=lm(log(-slope)~log(intercept),data=rand_results)
View(rand_results)
nullm=lm(log(-Slope)~log(Intercept),data=rand_results)
summary(nullm)
anova(nullm,fullm)
summary(anova(nullm,fullm))
anova(nullm,fullm)
library(stats)
p.adjust
?p.adjust
results=read.csv("./AllResults.csv",header=T)
results$Pcat[which(is.na(results$intercept))]=NA
pattern=read.csv("./AllPattern.csv",header=T)
pattern$Pcat[which(pattern$p.val<0.1)]="Y"
pattern$Pcat[which(pattern$p.val>0.1)]="N"
pattern$Srat=pattern$Persistent.S/pattern$Observed.S
pattern$Pdiff=pattern$Pattern-pattern$Null.Pattern
sig.list=pattern$Site[which(pattern$Pcat=="Y")]
nonsig.list=pattern$Site[which(pattern$Pcat=="N")]
View(pattern)
p.fdr=p.adjust(pattern$p.val, method = p.adjust.methods, n = length(pattern$p.val))
p.fdr
pattern$p.val
hist(pattern$p.val)
?hist
hist(pattern$p.val,breaks=seq(0,1,0.05))
hist(pattern$p.fdr,breaks=seq(0,1,0.05))
hist(p.fdr,breaks=seq(0,1,0.05))
p.adjust.methods
p.fdr=p.adjust(pattern$p.val, method = "fdr", n = length(pattern$p.val))
p.fdr
hist(p.fdr,breaks=seq(0,1,0.05))
p.fdr=p.adjust(pattern$p.val, method = "bonferroni", n = length(pattern$p.val))
hist(p.fdr,breaks=seq(0,1,0.05))
p.fdr=p.adjust(pattern$p.val, method = "holm", n = length(pattern$p.val))
hist(p.fdr,breaks=seq(0,1,0.05))
p.fdr=p.adjust(pattern$p.val, method = "hochberg", n = length(pattern$p.val))
hist(p.fdr,breaks=seq(0,1,0.05))
p.fdr=p.adjust(pattern$p.val, method = "BH", n = length(pattern$p.val))
hist(p.fdr,breaks=seq(0,1,0.05))
p.fdr=p.adjust(pattern$p.val, method = "BY", n = length(pattern$p.val))
hist(p.fdr,breaks=seq(0,1,0.05))
p.fdr=p.adjust(pattern$p.val, method = "hommel", n = length(pattern$p.val))
hist(p.fdr,breaks=seq(0,1,0.05))
library('ggplot2')
results=read.csv("./AllResults.csv",header=T)
results$Pcat[which(is.na(results$intercept))]=NA
pattern=read.csv("./AllPattern.csv",header=T)
pattern$Pcat[which(pattern$p.val<0.1)]="Y"
pattern$Pcat[which(pattern$p.val>0.1)]="N"
pattern$Srat=pattern$Persistent.S/pattern$Observed.S
pattern$Pdiff=pattern$Pattern-pattern$Null.Pattern
p.fdr=p.adjust(pattern$p.val, method = "fdr")
p.fdr
hist(p.fdr)
plot(pattern$p.val,p.fdr)
install.packages("fdrtool")
library("fdrtool")
?fdrtool
fdrtool(pattern$p.val)
fdrtool(pattern$p.val, statistic="pvalue")
p.fdr=fdrtool(pattern$p.val, statistic="pvalue")$pval
hist(p.fdr)
hist(pattern$p.val)
p.fdr=fdrtool(pattern$p.val, statistic="pvalue")$qval
hist(p.fdr)
pattern$p.val
p.fdr=fdrtool(pattern$p.val, statistic="pvalue")$lfdr
hist(p.fdr)
p.fdr=fdrtool(pattern$p.val, statistic="pvalue")$qval
hist(p.fdr)
q.val=fdrtool(pattern$p.val, statistic="pvalue")$qval
pattern$q.val=q.val
View(pattern)
length(q.val<0.1)
length(q.val<=0.1)
View(pattern)
length(which(q.val<=0.1))
?write.csv
write.csv(pattern,"pattern.csv")
citation()
